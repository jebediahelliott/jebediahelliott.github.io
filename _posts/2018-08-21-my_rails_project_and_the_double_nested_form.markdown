---
layout: post
title:      "My Rails Project and the Double Nested Form"
date:       2018-08-22 02:24:14 +0000
permalink:  my_rails_project_and_the_double_nested_form
---


For this project I started to lay down the major foundations of an app that I've been brainstorming for close to a year now. I built a recipe management tool that will grow into an all purpose food management tool for professional kitchens. Because of the way this app will grow I needed recipes and ingredients to be separate objects connected with a join table that hold the amount of an ingredient for a particular recipe. This meant setting up a form that created all three objects in one go. My inexperience was not helpful in getting this accomplished, but after some digging and with some help I got is set up using a `fields_for` helper within a parent `fields_for`.  Sorting out the resulting params was a joy. 

After that came the my biggest struggle of the project: how to get the validations running properly. The problem I kept running into was the validations for the ingredient object would fire when I created a recipe. The Rails magic seemed to have dried up. After a lot of trying to figure out why Rails wasn't doing what I thought it should do, I started worked out some custom validations and got it working. It's funny how so many hours of frustration can fit into one little sentence. Anyway, with validations locked in I went about making everything else do what it was supposed to do and was ready to refactor and put a bow on it. Part of my refactoring involved actually putting my custom validation in the model (In my frustrations with validations, my brain went out to lunch and I used the controller to set up the validation).  Here I ran into a little hickup and headed over to the docs to get it sorted out. As I was reading through, I noticed something that I had skimmed over in the multiple times I had read through this particular page while working on the project: `validate: true`. And with that it all came crashing home, all the pieces clicked and I knew why the magic of Rails seemed to have disappeared. When I saved a recipe it triggered validations for the recipe and it's child object, the amount, but when a child object is saved it doesn't trigger it's parent object's validations. In this case amount had two parent objects (recipe and ingredient) so I had to tell it to trigger validations for the parent that didn't initiate the save. I won't say that all the time I spent digging and working out the custom validation was for nothing because I learned a good deal, but it certainly is a punch in the gut to see those two little words wipe the pavement with your custom validations. On the bright side, the magic is back and I've learned a little more about how to use it.
